@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Index";
    if (Convert.ToBoolean(ViewData["MasterLoad"]) == true)
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#btn-add").click(function () {
            $("#divMasterOperationAreaContent").load('@Url.Action("Add", "Transaccion", new { area = "Finances" })');
        });
    });

    function btnEdit_onClick(transaccionId)
    {
        $("#divMasterOperationAreaContent").load('@Url.Action("Edit", "Transaccion", new { area = "Finances" })?transaccionId=' + transaccionId);
    }

    function btnDelete_onClick(transaccionId) {
        $("#divContentDeleteTransaccion").load('@Url.Action("Delete", "Transaccion", new { area = "Finances" })?transaccionId=' + transaccionId, function () {
            $('#DeleteModal').modal('show');
        });
    }

</script>

<div class="row">
    <div class="col-md-12">
        <h1 style="margin:15px;">Administracion de Transacciones</h1>
    </div>
</div>

<div class="col-md-12">
    <div class="box box-default">
        <div class="box-header with-border">
            <div class="row">
                <div class="col-md-12">
                    <button type="button" id="btn-add" class="btn btn-success pull-right">Agregar Transaccion</button>
                </div>
            </div>
        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-md-12">
                    @(
                    Html.Kendo().Grid<DS.Motel.Clients.Web.Areas.Finances.Models.Transaccion.NavegadorViewModel>().Name("GridTransaccion")
                    .Columns(column =>
                    {
                        column.Bound(c => c.Nro_Cuenta).Title("Nro. de Cuenta").Width("10%");
                        column.Bound(c => c.Tipo).Title("Tipo").Width("10%");
                        column.Bound(c => c.Fecha_Ini).Title("Fecha Inicio").Width("10%");
                        column.Bound(c => c.Fecha_Fin).Title("Fecha Fin").Width("10%");
                        column.Bound(c => c.Concepto).Title("Concepto").Width("calc(40%-120px)");
                        column.Bound(c => c.Saldo).Title("Saldo").Width("20%");
                        column.Bound(c => c).Title("Acciones").Width("120px").Sortable(false).Filterable(false).ClientTemplate(
                            "<button class='btn btn-warning' title='Editar' onclick='btnEdit_onClick(\"#:TransaccionId#\");' style='margin-right:10px;'><span class='glyphicon glyphicon-pencil'></span></button>" +
                            "<button class='btn btn-danger' title='Eliminar' onclick='btnDelete_onClick(\"#:TransaccionId#\");' ><span class='glyphicon glyphicon-remove' ></span></button>"
                            );
                    })
                    .Pageable(pageable => pageable.Enabled(true).ButtonCount(5))
                    .Filterable(filterable => filterable.Enabled(true))
                    .Sortable(sortable => sortable.Enabled(true))
                    .NoRecords(norecords => norecords.Template("No hay items para mostrar"))
                    .DataSource(datasourse => datasourse
                        .Ajax()
                        .PageSize(10)
                        .Read(read => read.Action("LoadGrid", "Transaccion"))
                        .ServerOperation(false))
                    )
                </div>
            </div>
        </div>
    </div>
</div>



@using (@Ajax.BeginForm("Delete", "Transaccion", new { area = "Finances" }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divContentDeleteTransaccion", OnSuccess = "Delete_onSuccess", OnBegin = "Delete_callOnBegin" }))
{
    <div class="modal fade" id="DeleteModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div id="divContentDeleteTransaccion" class="modal-content">
            </div>
        </div>
    </div>
}